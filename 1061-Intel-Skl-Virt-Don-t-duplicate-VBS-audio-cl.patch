From ec329e677bc3aeaaaf7281db28e7f35eb0df9a11 Mon Sep 17 00:00:00 2001
From: Grzegorz Janca <grzegorz.janca@intel.com>
Date: Mon, 4 Mar 2019 16:49:57 +0100
Subject: [PATCH 17/18] Intel: Skl: Virt: Don't duplicate VBS audio client

In case of resume from S3 the new instance of vbs audio
client was created. It cause memory overflow.
This patch prevent to create the new vbs audio client
if is already created.

Tracked-On: OAM-76372
Change-Id: Ifee837367ce86fdd3f1450befd83f8f0207ed656
Signed-off-by: Grzegorz Janca <grzegorz.janca@intel.com>
---
 .../soc/intel/skylake/virtio/skl-virt-audio.c | 26 +++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/sound/soc/intel/skylake/virtio/skl-virt-audio.c b/sound/soc/intel/skylake/virtio/skl-virt-audio.c
index 0b712db04fe9..2260f1fe10cd 100644
--- a/sound/soc/intel/skylake/virtio/skl-virt-audio.c
+++ b/sound/soc/intel/skylake/virtio/skl-virt-audio.c
@@ -144,14 +144,22 @@ int vskl_vbs_register_client(struct snd_skl_vbe *vbe)
 	unsigned int vmid;
 	int ret;
 
+	client = list_first_entry_or_null(&vbe->client_list,
+		struct snd_skl_vbe_client, list);
+	if (client != NULL) {
+		dev_info(vbe->dev, "Assign VBE Audio client id:%d\n",
+			client->vhm_client_id);
+		return;
+	}
+
 	/*
 	 * vbs core has mechanism to manage the client
 	 * there is no need to handle this in the special BE driver
 	 * let's use the vbs core client management later
 	 */
-	client = devm_kzalloc(vbe->dev, sizeof(*client), GFP_KERNEL);
+	client = kzalloc(sizeof(*client), GFP_KERNEL);
 	if (!client)
-		return -EINVAL;
+		return -ENOMEM;
 	client->vbe = vbe;
 
 	vmid = dev_info->_ctx.vmid;
@@ -197,9 +205,15 @@ int vskl_vbs_register_client(struct snd_skl_vbe *vbe)
 	/* complete client init and add to list */
 	list_add(&client->list, &vbe->client_list);
 
+	dev_info(vbe->dev, "VBS Audio client:%d had been created\n",
+		client->vhm_client_id);
 	return 0;
 err:
 	acrn_ioreq_destroy_client(client->vhm_client_id);
+	if (client != NULL) {
+		kfree(client);
+		client = NULL;
+	}
 	return -EINVAL;
 }
 
@@ -214,6 +228,13 @@ static void vskl_vbs_close_client(struct snd_skl_vbe *vbe)
 		acrn_ioreq_destroy_client(client->vhm_client_id);
 		list_del(&client->list);
 
+		if (client != NULL) {
+			dev_info(vbe->dev, "Delete VBS Audio client. id:%d\n",
+				client->vhm_client_id);
+			kfree(client);
+			client = NULL;
+		}
+
 	} else {
 		pr_err("%s: vbs client not present!\n", __func__);
 	}
@@ -262,6 +283,7 @@ static int vskl_vbs_audio_release(struct inode *inode, struct file *f)
 	struct vskl *vskl = get_virtio_audio();
 
 	vskl_vbs_close_client(&vskl->vbe);
+
 	return 0;
 }
 
-- 
2.17.1

